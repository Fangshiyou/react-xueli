{"version":3,"sources":["todo/Input.js","todo/List.js","todo/TodoList.js","index.js"],"names":["Input","handInput","e","keyCode","target","value","props","add","className","type","placeholder","onKeyDown","this","Component","List","index","change","del","todo","doing","map","item","done","key","onChange","changeItem","title","onClick","delItem","checked","Todolist","addItem","data","obj","setState","state","splice","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"qLAEqBA,G,iNACjBC,UAAU,SAACC,GACQ,KAAZA,EAAEC,SAAmC,KAAnBD,EAAEE,OAAOC,QAC1B,EAAKC,MAAMC,IAAIL,EAAEE,OAAOC,OACxBH,EAAEE,OAAOC,MAAM,K,uDAInB,OACI,yBAAKG,UAAU,OACX,0CACA,2BAAOC,KAAK,OAAOC,YAAY,mBAASC,UAAWC,KAAKX,iB,GAXrCY,cCAdC,E,yKACNC,GACPH,KAAKN,MAAMU,OAAOD,K,8BAEdA,GACJH,KAAKN,MAAMW,IAAIF,K,+BAET,IAAD,OACCG,EAASN,KAAKN,MAAdY,KACN,OACI,yBAAKV,UAAU,OACX,0BAAMA,UAAU,QAAhB,4BACA,0BAAMA,UAAU,OAAOI,KAAKN,MAAMa,OAClC,wBAAIX,UAAU,SAELU,EAAKE,KAAI,SAACC,EAAMN,GACb,OAAkB,IAAdM,EAAKC,KAED,wBAAIC,IAAKR,GACL,2BAAON,KAAK,WAAWe,SAAU,kBAAM,EAAKC,WAAWV,MAAWM,EAAKK,MACvE,4BAAQC,QAAS,kBAAM,EAAKC,QAAQb,KAApC,iBAIL,OAKnB,0BAAMP,UAAU,QAAhB,4BACA,0BAAMA,UAAU,OAAOI,KAAKN,MAAMgB,MAClC,wBAAId,UAAU,QAENU,EAAKE,KAAI,SAACC,EAAMN,GACZ,OAAkB,IAAdM,EAAKC,KAED,wBAAIC,IAAKR,GACL,2BAAON,KAAK,WAAWoB,QAAQ,UAAUL,SAAU,kBAAM,EAAKC,WAAWV,MAAiBM,EAAKK,MAC/F,4BAAQC,QAAS,kBAAM,EAAKC,QAAQb,KAApC,iBAIL,Y,GA1CDF,aCEbiB,E,kDACjB,aAAc,IAAD,uBACT,gBAaJC,QAAQ,SAACC,GACL,IAAIC,EAAI,CAACP,MAAMM,EAAKV,MAAK,GACzB,EAAKY,SAAS,CACVhB,KAAK,GAAD,mBAAK,EAAKiB,MAAMjB,MAAhB,CAAqBe,OAjBpB,EAoBbjB,OAAO,SAACD,GACJ,IAAIG,EAAK,YAAI,EAAKiB,MAAMjB,OACF,IAAnBA,EAAKH,GAAOO,KACXJ,EAAKH,GAAOO,MAAK,EAGjBJ,EAAKH,GAAOO,MAAK,EAErB,EAAKY,SAAS,CACVhB,KAAKA,KA7BA,EAgCbD,IAAI,SAACF,GACD,IAAIG,EAAK,YAAI,EAAKiB,MAAMjB,MACxBA,EAAKkB,OAAOrB,EAAM,GAClB,EAAKmB,SAAS,CACVhB,KAAKA,KAlCT,IAAIA,EAAKmB,KAAKC,MAAMC,aAAaC,QAAQ,SAFhC,OAIL,EAAKL,MADC,OAAPjB,EACY,CACPA,KAAK,IAIE,CACPA,KAAKA,GAVJ,E,iEAwCTqB,aAAaE,QAAQ,OAAOJ,KAAKK,UAAU9B,KAAKuB,MAAMjB,S,+BAGtD,IAAIC,EAAM,EACNG,EAAK,EAUT,OATAV,KAAKuB,MAAMjB,KAAKE,KAAI,SAACC,GAOjB,OANe,IAAZA,EAAKC,KACJH,IAGAG,IAEG,MAGP,6BACA,kBAAC,EAAD,CAAOf,IAAKK,KAAKmB,UACjB,kBAAC,EAAD,CAAMb,KAAMN,KAAKuB,MAAMjB,KAAMF,OAAQJ,KAAKI,OAAQC,IAAKL,KAAKK,IAAKE,MAAOA,EAAOG,KAAMA,S,GA1D3DT,aCDtC8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.62c3185a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./TodoList.css\"\r\nexport default class Input extends Component {\r\n    handInput=(e)=>{\r\n        if(e.keyCode===13 && e.target.value !== \"\"){\r\n            this.props.add(e.target.value);\r\n            e.target.value=\"\";           \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"tab\">\r\n                <span>ToDoList</span>\r\n                <input type=\"text\" placeholder=\"添加ToDo\" onKeyDown={this.handInput}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./TodoList.css\"\r\nexport default class List extends Component {\r\n    changeItem(index) {\r\n        this.props.change(index);\r\n    }\r\n    delItem(index) {\r\n        this.props.del(index);\r\n    }\r\n    render() {\r\n        var { todo } = this.props;\r\n        return (\r\n            <div className=\"box\">\r\n                <span className=\"word\">正在进行</span>\r\n                <span className=\"num\">{this.props.doing}</span>\r\n                <ul className=\"doing\">\r\n                    {\r\n                         todo.map((item, index) => {\r\n                            if (item.done === false) {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <input type=\"checkbox\" onChange={() => this.changeItem(index)} />{item.title}\r\n                                        <button onClick={() => this.delItem(index)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return \"\";\r\n                        })\r\n                    }\r\n                </ul>\r\n\r\n                <span className=\"word\">已经完成</span>\r\n                <span className=\"num\">{this.props.done}</span>\r\n                <ul className=\"done\">\r\n                    {\r\n                        todo.map((item, index) => {\r\n                            if (item.done === true) {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <input type=\"checkbox\" checked=\"checked\" onChange={() => this.changeItem(index)}></input>{item.title}\r\n                                        <button onClick={() => this.delItem(index)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return \"\";\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Input from './Input.js'\r\nimport List from './List.js'\r\nimport \"./TodoList.css\"\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        let todo=JSON.parse(localStorage.getItem('todo'));\r\n        if(todo===null){\r\n            this.state={\r\n                todo:[]\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                todo:todo\r\n            }\r\n        }\r\n    }\r\n    addItem=(data)=>{\r\n        var obj={title:data,done:false};\r\n        this.setState({\r\n            todo:[...this.state.todo,obj]\r\n        })\r\n    }\r\n    change=(index)=>{\r\n        let todo=[...this.state.todo];\r\n        if(todo[index].done===false){\r\n            todo[index].done=true;\r\n        }\r\n        else{\r\n            todo[index].done=false;\r\n        }\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n    }\r\n    del=(index)=>{\r\n        let todo=[...this.state.todo];\r\n        todo.splice(index,1);\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n    }\r\n    render() {\r\n        var doing=0;\r\n        var done=0;\r\n        this.state.todo.map((item)=>{\r\n            if(item.done===false){\r\n                doing++;\r\n            }\r\n            else{\r\n                done++;\r\n            }\r\n            return \"\";\r\n        })\r\n        return (\r\n            <div>\r\n            <Input add={this.addItem}/>\r\n            <List todo={this.state.todo} change={this.change} del={this.del} doing={doing} done={done}/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Todolist from './todo/TodoList'\r\nReactDOM.render(\r\n    <Todolist/>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}